const userData = {
	USD: 1000,
	EUR: 900,
	UAH: 15000,
	BIF: 20000,
	AOA: 100
};

const bankData = {
    USD: {
        max: 3000,
        min: 100,
        img: 'üíµ'
    },
    EUR: {
        max: 1000,
        min: 50,
        img: 'üí∂'
    },
    UAH: {
        max: 0,
        min: 0,
        img: 'üí¥'
    },
    GBP: {
        max: 10000,
        min: 100,
        img: 'üí∑'
    }
};



const getMoney = () => {
  return new Promise (function(resolve, reject) {
    let userPromptBalanse = prompt('–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ñ? —Ç–∞–∫/–Ω—ñ'); //—Ç–∞–∫
    userPromptBalanse.toLowerCase() === '—Ç–∞–∫' ? resolve(userData) : reject();
  })
};

getMoney()
  .then(
    function getUserBalance (userDataInformation) {
      const userCashTypes = Object.keys(userDataInformation);
          const cashType = prompt(`–í–≤–µ–¥—ñ—Ç—å –≤–∞–ª—é—Ç—É –∑–∞ —è–∫–æ—é –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ –±–∞–ª–∞–Ω—Å.  –î–æ—Å—Ç—É–ø–Ω—ñ –≤–∞–ª—é—Ç–∏: ${userCashTypes.join(', ')}`);
          switch (cashType) {
            case 'USD': console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userDataInformation.USD} ${cashType}`);
              break;
            case 'EUR': console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userDataInformation.EUR} ${cashType}`);
              break;
            case 'UAH': console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userDataInformation.UAH} ${cashType}`);
              break;
            case 'BIF': console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userDataInformation.BIF} ${cashType}`);
              break;
            case 'AOA': console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userDataInformation.AOA} ${cashType}`);
              break;
            case null: console.log(`–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É —Ç—Ä–µ–±–∞ –≤–≤–µ—Å—Ç–∏ –≤–∞–ª—é—Ç—É`);
              break;
            default: getUserBalance(userDataInformation);
          }
    }, 
  
    function () {

    }
  )